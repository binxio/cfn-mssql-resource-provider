AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Custom MSSQL Resource Provider
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
Resources:
  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CFNCustomMSSQLResourceProviderPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - '*'
          - Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
            Effect: Allow
      Roles:
        - !Ref 'LambdaRole'

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  CFNCustomProvider:
    Type: AWS::Lambda::Function
    Properties:
      Description: CloudFormation Custom:MSSQL resource implementation
      PackageType: Image
      Code:
        ImageUri: 463637877380.dkr.ecr.eu-central-1.amazonaws.com/xebia/cfn-mssql-resource-provider:0.2.4-3a26965
      VpcConfig:
        SecurityGroupIds:
          - !Ref 'SecurityGroup'
        SubnetIds: !Ref 'Subnets'
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-mssql-resource-provider-${VPC}'
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt 'LambdaRole.Arn'
