---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds: !Ref 'Subnets'

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.small
      Engine: sqlserver-ex
      EngineVersion: 15.00.4198.2.v1
      VPCSecurityGroups:
        - !Ref 'DatabaseSecurityGroup'
      MasterUsername: sa
      MasterUserPassword: !GetAtt 'DBPassword.Secret'
      MultiAZ: 'false'
      Port: '1433'
      PubliclyAccessible: 'true'
      DBSubnetGroupName: !Ref 'DBSubnetGroup'
    DeletionPolicy: Snapshot

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: sqlserver access
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          SourceSecurityGroupId: !Ref 'SecurityGroup'
      SecurityGroupEgress: []
      Tags:
        - Key: Name
          Value: !Sub 'mssql.${AWS::StackName}'

  DBPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/sqlserver/sa/password'
      Alphabet: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
      ReturnSecret: true
      RefreshOnUpdate: true
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  KongPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/sqlserver/kong/password'
      Alphabet: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
      Required:
        - Count: 1
          Alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZ
        - Count: 1
          Alphabet: 0123456789
        - Count: 1
          Alphabet: '$=+?/!@'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  KongDatabase:
    Type: Custom::SQLServerDatabase
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: kong2
      Server:
        URL: !Sub 'sqlserver://sa@${Database.Endpoint.Address}:${Database.Endpoint.Port}'
        PasswordParameterName: !Sub '/${AWS::StackName}/sqlserver/sa/password'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-sqlserver-resource-provider-${VPC}'

  KongLogin:
    Type: Custom::SQLServerLogin
    Properties:
      LoginName: kong
      DefaultDatabase: !GetAtt KongDatabase.Name
      PasswordParameterName: !Sub '/${AWS::StackName}/sqlserver/kong/password'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-sqlserver-resource-provider-${VPC}'
      Server:
        URL: !Sub 'sqlserver://sa@${Database.Endpoint.Address}:${Database.Endpoint.Port}'
        PasswordParameterName: !Sub '/${AWS::StackName}/sqlserver/sa/password'

  KongUser:
    Type: Custom::SQLServerUser
    Properties:
      UserName: kong
      LoginName: !GetAtt KongLogin.LoginName
      Server:
        URL: !Sub 'sqlserver://${Database.Endpoint.Address}:${Database.Endpoint.Port}/${KongDatabase.Name}'
        PasswordParameterName: !Sub '/${AWS::StackName}/sqlserver/sa/password'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-sqlserver-resource-provider-${VPC}'

Outputs:
  KongName:
    Value: !GetAtt KongUser.UserName
